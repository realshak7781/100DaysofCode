19. Remove Nth Node From End of List





//TC:~~O(n)
//SC:o(1)


//QUESTION LNK: https://leetcode.com/problems/remove-nth-node-from-end-of-list/description/?envType=study-plan-v2&envId=top-interview-150


TOPIC: LINKED LISTS


CODE:

class Solution {
private:
ListNode*reverse(ListNode*head){
    ListNode*prev=NULL;
    ListNode*curr=head;

    while(curr!=NULL){
        ListNode*forward=curr->next;
        curr->next=prev;
        prev=curr;
        curr=forward;
    }

    return prev;


}
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(head==NULL || head->next==NULL) return NULL;
    
    ListNode*reverse_head=reverse(head);

    if(n==1){
       ListNode*ans_head=reverse_head->next;

       reverse_head->next=NULL;

       return reverse(ans_head);
    }
    else{ 
        ListNode*curr=reverse_head;
        ListNode*prv=NULL;

        while(n!=1){
            prv=curr;
            curr=curr->next;
            n--;
        }

        prv->next=curr->next;
        curr->next=NULL;

        return reverse(reverse_head);
    }
        
    }
};
