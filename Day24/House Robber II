//   House Robber II

QUESTION LINK: https://www.codingninjas.com/studio/problems/house-robber_839733?leftPanelTab=0&leftPanelTabValue=PROBLEM


//T.C: O(N)
//S.C:  O(N)


USE OF KNOWLEDGE OF DYNAMIC PROGRAMMING


CODE:


#include <bits/stdc++.h>

long long int solve (vector<int>&array){
   long long int prev2=0;
   long long int prev1=array[0];


   for(int i=1;i<array.size();i++){
     long long int incl=prev2+array[i];
      long long int excl=prev1+0;

      long long int ans=max(incl,excl);
      prev2=prev1;
      prev1=ans;
   }


   return prev1;
}


long long int houseRobber(vector<int>& valueInHouse)
{
   vector<int> first,second;
   int size=valueInHouse.size();


   // base case
   if(size==1) return valueInHouse[0];

   for(int i=0;i<size;i++){
      if(i!=size-1){
         first.push_back(valueInHouse[i]);
      }

      if(i!=0){
         second.push_back(valueInHouse[i]);
      }
   }


   return max(solve(first),solve(second));
}
