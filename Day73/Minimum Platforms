Minimum Platforms






//QUESTION LNK: https://www.geeksforgeeks.org/problems/minimum-platforms-1587115620/1



TOPIC:   GREEDY ALGORITHM


   //{ Driver Code Starts
// Program to find minimum number of platforms
// required on a railway station
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    // Function to find the minimum number of platforms required at the
    // railway station such that no train waits.
    int findPlatform(vector<int>& arr, vector<int>& dep) {
       sort(arr.begin(),arr.end());
       sort(dep.begin(),dep.end());
       int n=arr.size();
       
       int aT=0,dT=0,p=0,ans=-1e9;
       
       while(aT<n && dT<n){
           if(arr[aT]<=dep[dT]){
               aT++;
               p++;
           }
           else{
               p--;
               dT++;
           }
           ans=max(ans,p);
       }
       
       return ans;
    }
};


//{ Driver Code Starts.
//  Driver code
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        vector<int> arr(n);
        vector<int> dep(n);
        for (int i = 0; i < n; i++)
            cin >> arr[i];
        for (int j = 0; j < n; j++) {
            cin >> dep[j];
        }
        Solution ob;
        cout << ob.findPlatform(arr, dep) << endl;
    }
    return 0;
}
// } Driver Code Ends
