76. Minimum Window Substring



//TC:o(n+M)
//SC:o(1)


//QUESTION LNK: https://leetcode.com/problems/minimum-window-substring/?envType=study-plan-v2&envId=top-interview-150

TOPIC: TWO POINTER

class Solution {
public:
    string minWindow(string s, string t) {
        int left=0,right=0,minLen=1e9,index=-1,cnt=0;
        vector<int> hash(256,0);
        int wordLength=t.length();

        for(int i=0;i<t.length();i++){
            hash[t[i]]++;
        }

        while(right<s.length()){
            char cur=s[right];
            if(hash[cur]>0) cnt=cnt+1;
            hash[cur]--;

            while(cnt==wordLength){
                if(right-left+1<minLen){
                    minLen=right-left+1;
                    index=left;
                }

                hash[s[left]]++;
                if(hash[s[left]]>0) cnt=cnt-1;

                left++;
            }

            right++;
        }

         // Return the smallest window or empty string if not found
        return index == -1 ? "" : s.substr(index, minLen);
    }
};
