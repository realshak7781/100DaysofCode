
1091. Shortest Path in Binary Matrix






//T.C: O(n*N)
//S.C: O(n*N)

//QUESTION LNK:https://leetcode.com/problems/shortest-path-in-binary-matrix/

USE OF KNOWLEDGE OF  Graphs


class Solution {
public:
    int shortestPathBinaryMatrix(vector<vector<int>>& grid) {
        int n=grid.size();
        if(grid[0][0]==1 || grid[n-1][n-1]==1 ) return -1;
        if(n-1==0) return 1;
        vector<vector<int>>dist(n,vector<int>(n,INT_MAX));
        dist[0][0]=0;
        queue<pair<int,pair<int,int>>> q;
        // dijktras with queue dist,row,col;

        int nRow[]={-1,0,1,0,-1,1,1,-1};
        int nCol[]={0,1,0,-1,1,1,-1,-1};

        q.push({0,{0,0}});
        while(!q.empty()){
            int row=q.front().second.first;
            int col=q.front().second.second;
            q.pop();

            for(int i=0;i<8;i++){
                int r=row+nRow[i];
                int c=col+nCol[i];

                if(r>=0 && r<n && c>=0 && c<n && grid[r][c]==0 && (dist[row][col]+1 <dist[r][c])){
                    // relax edges
                    dist[r][c]=dist[row][col]+1;
                    q.push({dist[r][c],{r,c}});

                    if(r==n-1 && c==n-1) return dist[r][c]+1;
                }
            }
        }

        return -1;
    }
};
