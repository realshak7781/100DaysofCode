209. Minimum Size Subarray Sum





//TC:~~O(n)
//SC:o(1)


//QUESTION LNK: https://leetcode.com/problems/minimum-size-subarray-sum/description/?envType=study-plan-v2&envId=top-interview-150


TOPIC: TWO POINTER/Slding window

CODE:


class Solution {
public:
    int minSubArrayLen(int target, vector<int>& nums) {
        int start=0,end=0,minLength=1e9,sum=0;
        int n=nums.size();

       for (int end = 0; end < n; ++end) {
        sum += nums[end];

        // Shrink the window as small as possible while the sum is >= target
        while (sum >= target) {
            minLength = min(minLength, end - start + 1);
            sum -= nums[start++];
        }
    }
    
    return (minLength == 1e9) ? 0 : minLength;
    }
};
