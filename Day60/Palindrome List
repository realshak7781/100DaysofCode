Palindrome List


//T.C:o(n);
//S.C: O(1)

//QUESTION LNK: https://www.interviewbit.com/problems/palindrome-list/



TOPIC:   LINKED LIST


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
 
 ListNode*reverse(ListNode*cur){
     ListNode*prev=nullptr;
     
     while(cur){
         ListNode*front=cur->next;
         cur->next=prev;
         prev=cur;
         cur=front;
     }
     return prev;
 }
int Solution::lPalin(ListNode* A) {
    if(!A || !A->next) return 1;
    ListNode*fast=A;
    ListNode*slow=A;
    
    
    while(fast->next && fast->next->next!=nullptr){
        slow=slow->next;
        fast=fast->next;
        
        if(fast){
            fast=fast->next;
        }
    }
    ListNode*front=slow->next;
    slow->next=nullptr;
    
    ListNode*rHead=reverse(front);
  
    ListNode*temp=A;
    
    while(rHead){
        if(rHead->val!=temp->val) return 0;
            rHead=rHead->next;
            temp=temp->next;
    }
    
    return 1;
   
}
