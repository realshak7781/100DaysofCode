1092. Shortest Common Supersequence 





//T.C:o(m*n);
//S.C: O(m*n)

//QUESTION LNK:  https://leetcode.com/problems/shortest-common-supersequence/

TOPIC:   DYNAMIC PROGRAMMING

class Solution {
private:
string solveTab(string s1,string s2,int n,int m){
    vector<vector<int>>dp(n+1,vector<int>(m+1,0));

    for(int j=0;j<=m;j++) dp[0][j]=0;
    for(int i=0;i<=n;i++) dp[i][0]=0;

    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
              // if its a match
        if(s1[i-1]==s2[j-1]) dp[i][j]=1+dp[i-1][j-1];

    // if its not a match
      else dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
        }
    }
    string ans="";
    int i=n,j=m;

    while(i>0 && j>0){
        if(s1[i-1]==s2[j-1]){
            ans+=s1[i-1];
            i--;j--;
        }
        else if(dp[i-1][j]>dp[i][j-1]){
            ans+=s1[i-1];
            i--;
        }
        else{
            ans+=s2[j-1];
            j--;
        }
    }
    while(i>0){
        ans+=s1[i-1];
        i--;
    }

    while(j>0){
        ans+=s2[j-1];
        j--;
    }

    reverse(ans.begin(),ans.end());

    return ans;
    
}    
public:
    string shortestCommonSupersequence(string str1, string str2) {
        int n=str1.length(),m=str2.length();
        return solveTab(str1,str2,n,m);
    }
};
