//  COUNT DERANGEMENTS

QUESTION LINK: https://www.codingninjas.com/studio/problems/count-derangements_873861?leftPanelTab=0&leftPanelTabValue=PROBLEM

//T.C: O(n)
//S.C:  O(1)


USE OF KNOWLEDGE OF DYNAMIC PROGRAMMING

CODE:

#define mod 10000007
#include <vector>

long long int solveMem(int n, vector<long long int>& dp) {
    // Base cases 
    if (n == 1) return 0;
    if (n == 2) return 1;

    if (dp[n] != -1) return dp[n];

    dp[n] = (((n - 1) % mod) * ((solveMem(n - 1, dp) % mod) + (solveMem(n - 2, dp) % mod))) % mod;

    return dp[n];
}


long long int solveTab(int n){
    
    long long int prev2=0;
    long long int prev1=1;

    for(int i=3;i<=n;i++){
        long long ans=(((i - 1) % mod) * ((prev1 % mod) + (prev2 % mod))) % mod;
        prev2=prev1;
        prev1=ans;
    }

    return prev1;
}


long long int countDerangements(int n) {
    return solveTab(n);
}
